From 9b6dceae6674a4939ffef67bc14186791ac5c28c Mon Sep 17 00:00:00 2001
From: dgibson <dgibson@redhat.com>
Date: Wed, 29 Oct 2014 05:04:09 +0100
Subject: [PATCH 11/48] vga: Add endian to vmstate

Message-id: <1414559050-21089-11-git-send-email-dgibson@redhat.com>
Patchwork-id: 61986
O-Subject: [RHEL 7.1 qemu-kvm-rhev 10/11] vga: Add endian to vmstate
Bugzilla: 1146809
RH-Acked-by: Laszlo Ersek <lersek@redhat.com>
RH-Acked-by: Paolo Bonzini <pbonzini@redhat.com>
RH-Acked-by: Gerd Hoffmann <kraxel@redhat.com>

Signed-off-by: David Gibson <dgibson@redhat.com>

commit c3b10605147f9113b8b157d7226d3e215184bc0e
Author: Benjamin Herrenschmidt <benh@kernel.crashing.org>
Date:   Mon Jun 23 13:57:41 2014 +1000

    vga: Add endian to vmstate

    Include the endian state in the migration stream as an optional
    subsection which we only include when the endian isn't the default,
    thus enabling backward compatibility of the common case.

    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>

    Changes by kraxel:
     * Remove bochs dispi interface changes.  We'll do that in
       a different way to make sure we don't conflict with
       possible future bochs dispi interface changes.
     * keep live migration bits.

    Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
    Reviewed-by: David Gibson <david@gibson.dropbear.id.au>

Signed-off-by: Miroslav Rezanina <mrezanin@redhat.com>
---
 hw/display/vga.c     | 41 +++++++++++++++++++++++++++++++++++++----
 hw/display/vga_int.h |  2 ++
 2 files changed, 39 insertions(+), 4 deletions(-)

diff --git a/hw/display/vga.c b/hw/display/vga.c
index 90b771e..1ea779b 100644
--- a/hw/display/vga.c
+++ b/hw/display/vga.c
@@ -1512,7 +1512,8 @@ static void vga_draw_graphic(VGACommonState *s, int full_update)
     if (s->line_offset != s->last_line_offset ||
         disp_width != s->last_width ||
         height != s->last_height ||
-        s->last_depth != depth) {
+        s->last_depth != depth ||
+        s->last_byteswap != byteswap) {
         if (depth == 32 || (depth == 16 && !byteswap)) {
             surface = qemu_create_displaysurface_from(disp_width,
                     height, depth, s->line_offset,
@@ -1528,6 +1529,7 @@ static void vga_draw_graphic(VGACommonState *s, int full_update)
         s->last_height = height;
         s->last_line_offset = s->line_offset;
         s->last_depth = depth;
+        s->last_byteswap = byteswap;
         full_update = 1;
     } else if (is_buffer_shared(surface) &&
                (full_update || surface_data(surface) != s->vram_ptr
@@ -1789,6 +1791,7 @@ void vga_common_reset(VGACommonState *s)
     s->cursor_start = 0;
     s->cursor_end = 0;
     s->cursor_offset = 0;
+    s->big_endian_fb = s->default_endian_fb;
     memset(s->invalidated_y_table, '\0', sizeof(s->invalidated_y_table));
     memset(s->last_palette, '\0', sizeof(s->last_palette));
     memset(s->last_ch_attr, '\0', sizeof(s->last_ch_attr));
@@ -2020,6 +2023,28 @@ static int vga_common_post_load(void *opaque, int version_id)
     return 0;
 }
 
+static bool vga_endian_state_needed(void *opaque)
+{
+    VGACommonState *s = opaque;
+
+    /*
+     * Only send the endian state if it's different from the
+     * default one, thus ensuring backward compatibility for
+     * migration of the common case
+     */
+    return s->default_endian_fb != s->big_endian_fb;
+}
+
+const VMStateDescription vmstate_vga_endian = {
+    .name = "vga.endian",
+    .version_id = 1,
+    .minimum_version_id = 1,
+    .fields = (VMStateField[]) {
+        VMSTATE_BOOL(big_endian_fb, VGACommonState),
+        VMSTATE_END_OF_LIST()
+    }
+};
+
 const VMStateDescription vmstate_vga_common = {
     .name = "vga",
     .version_id = 2,
@@ -2056,6 +2081,14 @@ const VMStateDescription vmstate_vga_common = {
         VMSTATE_UINT32(vbe_line_offset, VGACommonState),
         VMSTATE_UINT32(vbe_bank_mask, VGACommonState),
         VMSTATE_END_OF_LIST()
+    },
+    .subsections = (VMStateSubsection []) {
+        {
+            .vmsd = &vmstate_vga_endian,
+            .needed = vga_endian_state_needed,
+        }, {
+            /* empty */
+        }
     }
 };
 
@@ -2125,14 +2158,14 @@ void vga_common_init(VGACommonState *s, Object *obj, bool global_vmstate)
     }
 
     /*
-     * Set default fb endian based on target, should probably be turned
+     * Set default fb endian based on target, could probably be turned
      * into a device attribute set by the machine/platform to remove
      * all target endian dependencies from this file.
      */
 #ifdef TARGET_WORDS_BIGENDIAN
-    s->big_endian_fb = true;
+    s->default_endian_fb = true;
 #else
-    s->big_endian_fb = false;
+    s->default_endian_fb = false;
 #endif
     vga_dirty_log_start(s);
 }
diff --git a/hw/display/vga_int.h b/hw/display/vga_int.h
index e686989..3295335 100644
--- a/hw/display/vga_int.h
+++ b/hw/display/vga_int.h
@@ -149,6 +149,7 @@ typedef struct VGACommonState {
     uint32_t last_width, last_height; /* in chars or pixels */
     uint32_t last_scr_width, last_scr_height; /* in pixels */
     uint32_t last_depth; /* in bits */
+    bool last_byteswap;
     uint8_t cursor_start, cursor_end;
     bool cursor_visible_phase;
     int64_t cursor_blink_time;
@@ -157,6 +158,7 @@ typedef struct VGACommonState {
     bool full_update_text;
     bool full_update_gfx;
     bool big_endian_fb;
+    bool default_endian_fb;
     /* hardware mouse cursor support */
     uint32_t invalidated_y_table[VGA_MAX_HEIGHT / 32];
     void (*cursor_invalidate)(struct VGACommonState *s);
-- 
1.8.3.1

